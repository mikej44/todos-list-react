{"version":3,"sources":["Form/index.js","Tasks/index.js","Buttons/index.js","Section/index.js","Header/index.js","Container/index.js","App.js","reportWebVitals.js","index.js"],"names":["Form","addNewTask","useState","newTaskContent","setNewTaskContent","className","onSubmit","event","preventDefault","trim","value","placeholder","onChange","target","NextYearTasks","nextYearTasks","hideDone","removeTask","toggleTaskDone","map","nextYearTask","done","onClick","id","content","Buttons","toggleHideDone","setAllDone","length","disabled","every","Section","title","body","extraHeaderContent","Header","Container","children","App","setHideDone","setNextYearTasks","Tasks","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c3030d7b.chunk.js","sourcesContent":["import \"./style.css\";\r\nimport { useState } from 'react';\r\n\r\nconst Form = ({ addNewTask }) => {\r\n\r\n    const [newTaskContent, setNewTaskContent] = useState(\"\");\r\n\r\n    const onFormSubmit = (event) => {\r\n        event.preventDefault(event);\r\n        if(newTaskContent.trim() === \"\") {\r\n            return;\r\n        }\r\n        addNewTask(newTaskContent.trim());\r\n        setNewTaskContent(\"\");\r\n    };\r\n\r\n    return (\r\n        <form className=\"form\" onSubmit={onFormSubmit}>\r\n            <input\r\n                value={newTaskContent}\r\n                className=\"form__input\"\r\n                placeholder=\"wpisz cel\"\r\n                onChange={({ target }) => setNewTaskContent(target.value)}\r\n            />\r\n\r\n            <button\r\n                className=\"form__addButton\">\r\n                <b>DODAJ!</b>\r\n            </button>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default Form;","import \"./style.css\";\r\n\r\nconst NextYearTasks = ({ nextYearTasks, hideDone, removeTask, toggleTaskDone }) => (\r\n  <ul className=\"list\">\r\n    {nextYearTasks.map(nextYearTask => (\r\n      <li\r\n        className={`listItem ${nextYearTask.done && hideDone\r\n          ? \"listItem--hide\"\r\n          : \"\"}`}\r\n        key={nextYearTask.id}\r\n      >\r\n        <button\r\n          onClick={() => toggleTaskDone(nextYearTask.id)}\r\n          className={`button ${nextYearTask.done ? \"button--thick\" : \"\"}`}></button>\r\n        <span className={`listItemText ${nextYearTask.done ? \"taskDone\" : \"\"}`}>\r\n          {nextYearTask.id} - {nextYearTask.content}\r\n        </span>\r\n        <button\r\n          className=\"button button--remove\"\r\n          onClick={() => removeTask(nextYearTask.id)}></button>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nexport default NextYearTasks;","import \"./style.css\";\r\n\r\nconst Buttons = ({ nextYearTasks, hideDone, toggleHideDone, setAllDone }) => {\r\n\r\n  if (nextYearTasks.length === 0) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className=\"taskList__buttons\">\r\n      <>\r\n        <button onClick={toggleHideDone} className={\r\n          `taskList__button`}>\r\n          {hideDone ? \"Pokaż ukończone\" : \"Ukryj ukończone\"}\r\n        </button>\r\n        <button className=\"taskList__button\"\r\n          disabled={nextYearTasks.every(({ done }) => done)}\r\n          onClick={setAllDone}\r\n        > Ukończ wszystkie\r\n        </button>\r\n      </>\r\n    </div >\r\n  )\r\n};\r\n\r\nexport default Buttons;","import \"./style.css\";\r\n\r\nconst Section = ({ title, body, extraHeaderContent }) => (\r\n    <section className=\"taskList\">\r\n        {extraHeaderContent}\r\n        <h2 className=\"container__header2\">{title}</h2>\r\n        {body}\r\n    </section>\r\n\r\n);\r\n\r\nexport default Section;","import \"./style.css\";\r\n\r\nconst Header = ({ title }) => (\r\n    <header>\r\n        <h1 className=\"container__header\">{title}</h1>\r\n    </header>\r\n);\r\n\r\nexport default Header;","import \"./style.css\";\r\n\r\nconst Container = ({ children }) => (\r\n    <main className=\"container\">\r\n        {children}\r\n    </main>\r\n);\r\n\r\nexport default Container;","import React, { useState } from 'react';\nimport Form from \"./Form\";\nimport Tasks from \"./Tasks\";\nimport Buttons from \"./Buttons\";\nimport Section from \"./Section\";\nimport Header from \"./Header\";\nimport Container from \"./Container\";\n\nfunction App() {\n  const [hideDone, setHideDone] = useState(false);\n  const [nextYearTasks, setNextYearTasks] = useState(\n    [\n      { id: 1, content: \"przejść na reacta\", done: false },\n      { id: 2, content: \"zjeść obiad\", done: true },\n    ]\n  );\n\n  const toggleHideDone = () => {\n    setHideDone(hideDone => !hideDone);\n  };\n\n  const removeTask = (id) => {\n    setNextYearTasks(nextYearTask => nextYearTask.filter(nextYearTask => nextYearTask.id !== id));\n  };\n\n  const toggleTaskDone = (id) => {\n    setNextYearTasks(nextYearTasks => nextYearTasks.map(nextYearTask => {\n      if (nextYearTask.id === id) {\n        return { ...nextYearTask, done: !nextYearTask.done };\n      }\n\n      return nextYearTask;\n    }))\n  };\n\n  const setAllDone = () => {\n    setNextYearTasks(nextYearTasks =>\n      nextYearTasks.map(nextYearTask => ({\n        ...nextYearTask, done: true\n      })));\n  };\n\n  const addNewTask = (content) => {\n    setNextYearTasks(nextYearTasks => [\n      ...nextYearTasks,\n      {\n        content,\n        done: false,\n        id: nextYearTasks.length ? nextYearTasks[nextYearTasks.length - 1].id + 1 : 1,\n      }\n    ]);\n\n  };\n\n  return (\n    <Container>\n      <Header title=\"Lista celów na przyszły rok\" />\n      <Section\n        title=\"Dodaj cel\"\n        body={<Form addNewTask={addNewTask} />}\n      />\n\n      <Section\n        title=\"Lista celów\"\n        body={<Tasks\n          nextYearTasks={nextYearTasks}\n          hideDone={hideDone}\n          removeTask={removeTask}\n          toggleTaskDone={toggleTaskDone}\n        />}\n        extraHeaderContent={<Buttons\n          nextYearTasks={nextYearTasks}\n          hideDone={hideDone}\n          toggleHideDone={toggleHideDone}\n          setAllDone={setAllDone}\n        />}\n      />\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}